#@data/values-schema
---
appVersion: "latest"
version: 0.0.1

name: nitter
hostname: "nitter.net"
port: 8080

#! -- The number of replicas
replicaCount: 1

#! -- The `spec.strategyTpye` for updates
strategyType: RollingUpdate

#! -- The maximum number of Pods that can be created over the desired number of `ReplicaSet` during updating.
maxSurge: 1

#! -- The maximum number of Pods that can be unavailable during updating
maxUnavailable: 1

image:
  #! -- the repostory to pull the image from
  repository: "quay.io/unixfox/nitter"
  #! -- the docker tag, if left empty it will get it from the chart's appVersion
  tag: "latest"
  #! -- the pull policy
  pullPolicy: IfNotPresent

#! -- Configuration for the web interface service
service:
  #! -- Configuration for the HTTP web interface listener
  http:

    #! -- Generate a service for HTTP traffic
    enabled: true

    #! -- The port of the web HTTP service
    port: 80

    #! -- Optional node port for the web HTTP service
    nodePort: ""

  #! -- Configuration for the HTTPS web interface listener
  https:
    #! -- Generate a service for HTTPS traffic
    enabled: true

    #! -- The port of the web HTTPS service
    port: 443

    #! -- Optional node port for the web HTTPS service
    nodePort: ""

  #! -- `spec.type` for the web interface Service
  type: ClusterIP

  #! -- `spec.externalTrafficPolicy` for the web interface Service
  externalTrafficPolicy: Local

  #! -- A fixed `spec.loadBalancerIP` for the web interface Service
  loadBalancerIP: ""
  #! -- A fixed `spec.loadBalancerIP` for the IPv6 web interface Service
  loadBalancerIPv6: ""

  #! -- Annotations for the DHCP service
  annotations: {}
    #! metallb.universe.tf/address-pool: network-services
    #! metallb.universe.tf/allow-shared-ip: pihole-svc

#! -- Configuration for the Ingress
ingress:
  #! -- Generate a Ingress resource
  enabled: false

  #! -- Specify an ingressClassName
  #! ingressClassName: nginx

  #! -- Annotations for the ingress
  annotations: {}
    #! kubernetes.io/ingress.class: nginx
    #! kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    #! virtualHost (default value is pi.hole) will be appended to the hosts
    - chart-example.local
  tls: ""
  #!  - secretName: chart-example-tls
  #!    hosts:
  #!     #!- virtualHost (default value is pi.hole) will be appended to the hosts
  #!      - chart-example.local

redis: 
  #! -- The number of replicas
  replicaCount: 1

  image:
    #! -- the repostory to pull the image from
    repository: "redis"
    #! -- the docker tag, if left empty it will get it from the chart's appVersion
    tag: "6-alpine"
    #! -- the pull policy
    pullPolicy: IfNotPresent